// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "EncapsulatedObject.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace kad {

namespace {

const ::google::protobuf::Descriptor* EncapsulatedObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncapsulatedObject_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_EncapsulatedObject_2eproto() {
  protobuf_AddDesc_EncapsulatedObject_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "EncapsulatedObject.proto");
  GOOGLE_CHECK(file != NULL);
  EncapsulatedObject_descriptor_ = file->message_type(0);
  static const int EncapsulatedObject_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncapsulatedObject, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncapsulatedObject, last_published_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncapsulatedObject, original_published_time_),
  };
  EncapsulatedObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EncapsulatedObject_descriptor_,
      EncapsulatedObject::default_instance_,
      EncapsulatedObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncapsulatedObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncapsulatedObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EncapsulatedObject));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_EncapsulatedObject_2eproto);
}

void protobuf_RegisterTypes() {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EncapsulatedObject_descriptor_, &EncapsulatedObject::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_EncapsulatedObject_2eproto() {
  delete EncapsulatedObject::default_instance_;
  delete EncapsulatedObject_reflection_;
}

void protobuf_AddDesc_EncapsulatedObject_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030EncapsulatedObject.proto\022\003kad\"`\n\022Encap"
    "sulatedObject\022\014\n\004data\030\001 \002(\014\022\033\n\023last_publ"
    "ished_time\030\002 \002(\r\022\037\n\027original_published_t"
    "ime\030\003 \002(\r", 129);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "EncapsulatedObject.proto", &protobuf_RegisterTypes);
  EncapsulatedObject::default_instance_ = new EncapsulatedObject();
  EncapsulatedObject::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_EncapsulatedObject_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_EncapsulatedObject_2eproto {
  StaticDescriptorInitializer_EncapsulatedObject_2eproto() {
    protobuf_AddDesc_EncapsulatedObject_2eproto();
  }
} static_descriptor_initializer_EncapsulatedObject_2eproto_;


// ===================================================================

const ::std::string EncapsulatedObject::_default_data_;
#ifndef _MSC_VER
const int EncapsulatedObject::kDataFieldNumber;
const int EncapsulatedObject::kLastPublishedTimeFieldNumber;
const int EncapsulatedObject::kOriginalPublishedTimeFieldNumber;
#endif  // !_MSC_VER

EncapsulatedObject::EncapsulatedObject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EncapsulatedObject::InitAsDefaultInstance() {}

EncapsulatedObject::EncapsulatedObject(const EncapsulatedObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EncapsulatedObject::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&_default_data_);
  last_published_time_ = 0u;
  original_published_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EncapsulatedObject::~EncapsulatedObject() {
  SharedDtor();
}

void EncapsulatedObject::SharedDtor() {
  if (data_ != &_default_data_) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* EncapsulatedObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncapsulatedObject_descriptor_;
}

const EncapsulatedObject& EncapsulatedObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_EncapsulatedObject_2eproto();  return *default_instance_;
}

EncapsulatedObject* EncapsulatedObject::default_instance_ = NULL;

EncapsulatedObject* EncapsulatedObject::New() const {
  return new EncapsulatedObject;
}

void EncapsulatedObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (data_ != &_default_data_) {
        data_->clear();
      }
    }
    last_published_time_ = 0u;
    original_published_time_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EncapsulatedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // required bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_data()));
        if (input->ExpectTag(16)) goto parse_last_published_time;
        break;
      }
      
      // required uint32 last_published_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_last_published_time:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &last_published_time_));
        _set_bit(1);
        if (input->ExpectTag(24)) goto parse_original_published_time;
        break;
      }
      
      // required uint32 original_published_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
       parse_original_published_time:
        DO_(::google::protobuf::internal::WireFormat::ReadUInt32(
              input, &original_published_time_));
        _set_bit(2);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EncapsulatedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  ::google::protobuf::uint8* raw_buffer = output->GetDirectBufferForNBytesAndAdvance(_cached_size_);
  if (raw_buffer != NULL) {
    EncapsulatedObject::SerializeWithCachedSizesToArray(raw_buffer);
    return;
  }
  
  // required bytes data = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::WriteBytes(1, this->data(), output);
  }
  
  // required uint32 last_published_time = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(2, this->last_published_time(), output);
  }
  
  // required uint32 original_published_time = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::WriteUInt32(3, this->original_published_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EncapsulatedObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes data = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormat::WriteBytesToArray(1, this->data(), target);
  }
  
  // required uint32 last_published_time = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(2, this->last_published_time(), target);
  }
  
  // required uint32 original_published_time = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormat::WriteUInt32ToArray(3, this->original_published_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EncapsulatedObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->data());
    }
    
    // required uint32 last_published_time = 2;
    if (has_last_published_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->last_published_time());
    }
    
    // required uint32 original_published_time = 3;
    if (has_original_published_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::UInt32Size(
          this->original_published_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void EncapsulatedObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EncapsulatedObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EncapsulatedObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EncapsulatedObject::MergeFrom(const EncapsulatedObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_data(from.data());
    }
    if (from._has_bit(1)) {
      set_last_published_time(from.last_published_time());
    }
    if (from._has_bit(2)) {
      set_original_published_time(from.original_published_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EncapsulatedObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncapsulatedObject::CopyFrom(const EncapsulatedObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncapsulatedObject::Swap(EncapsulatedObject* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(last_published_time_, other->last_published_time_);
    std::swap(original_published_time_, other->original_published_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool EncapsulatedObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

const ::google::protobuf::Descriptor* EncapsulatedObject::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* EncapsulatedObject::GetReflection() const {
  protobuf_AssignDescriptorsOnce();
  return EncapsulatedObject_reflection_;
}

}  // namespace kad

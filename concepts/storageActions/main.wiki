h1. Storage Actions In BoxOffice

STATUS: work in progress (will work on it in plane)


Concepts

h2. defs

primary storage = ZFS
secondary storage = DSS
backup = the copy on DSS
snapshots always on primary (ZFS)

h3. qdisk
- has unique id
- exists in different types

h4. types
- secondary =  DSS volume
- secondaryclone = a clone of a DSS volume (A snapshot being revived as an active volume)
- secondarysnapshot = a snapshot of a zvol (can not be used as active volume yet)
- primary = zvol on ZFS
- primaryclone = a clone of a ZVOL (a zfs snapshot being revivied as active volume)
- primarysnapshot = a snapshot of a zvol (can not be used as active volume yet)
- vdiImage = vdi image on domain image NAS (share on our dmachine for now)
- vdiImageCompressed = compressed vdi image (7z)
- zfsImage = ZFS send image on domain image NAS (share on our dmachine for now)
- zfsImageCompressed = ZFS send image compressed (7z)
h4. remarks
- on primary or secondary can be a snapshot or not
h4. important properties
- type
- name (given when created)
- guid
- qdiskparents : parent (last item of parent array = last source)
-- e.g. primary has zfsImage as parent
-- e.g. primary can have primary as parent
-- e.g. secondary has primary as parent
-- e.g. secondarysnapshot has secondary as parent
-- e.g. secondaryclone has secondarysnapshot as parent
-- many combinations are possible

h4. qdisk behaviour

- connected to machine
- connection types
-- vmachine
-- dmachine for the images
-- unknown machine when not known (e.g. when doing import then no connection yet)
- capacity planning on primary (only when import or copy)
-- location is selected based on least used CPU node (already used CPU capacity) and enough empty diskspace


h2. The Actions

h3. VMachine.Backup(vmachineGuid,QdiskList)

- params:
-- QDiskList= array of int (each int is nr of volme) OR array of qdisk GUID
- calls:
-- QDisk.Backup(qdiskGuid) for each relevant disk

h3. QDisk.Backup(qdiskGuid)

- makes sure we have snapshot on ZFS/DSS of relevant disk
- only works for qdisk type:primary
- call
-- qdisk.snapshot(qdiskGuid)
-- storagesystem.exportVolume(storageSystemMachineGuid,qdiskGuid,)

h3. QDisk.Snapshot(qdiskGuid)

- calls qdisk.backup(qdiskGuid)
- because of similar technical implementation
- only works for qdisk type:primary
- results in automatic backup
- call
-- storagesystem.snapshotQDisk(machineGuid,qdiskGuid)


h3. QDisk.Export(qdiskGuid,type=["vdi" or "zfs"],compressed=False,destination=[unc path for destination],name)
- param: destination
-- e.g. ftp://kristof:apassword@212.3.4.5/alocation/
-- e.g. cifs://kristof:apassword@212.3.4.5/alocation/
- param: name
-- meaningfull name for backup (<128 chars)
- only ftp and cifs supported
- VDI not supported now (for later)
- filename = .vdi or .zfs
- for ZFS done by ZFS send
- compression = 7zip (if 7zip to difficult use tgz)


h3. QDisk.Import(qdiskGuid,source=[unc path for destination],QDiskType,name)
- param: qdisktype
- param: source
-- e.g. ftp://kristof:apassword@212.3.4.5/alocation/myBackupFrom30-10-2005.vdi.7z
-- e.g. cifs://kristof:apassword@212.3.4.5/alocation/myBackupFrom30-10-2005.zfs
- only ftp and cifs supported
- VDI not supported now (for later)

h3. QDisk.Copy(qdiskGuid,destinationQdiskType,name)
- param destinationQdiskType: secondary, primary, vdiImage, vdiImageCompressed, zfsImage, zfsImageCompressed
- supported copy operations for now (all compression options not specified but are also possible)
-- copy from primary to primary (try clone, if not possible do ZFS send to remote machine)
-- copy from primary to secondary
-- copy from secondary to secondary
-- copy from secondary to primary
-- copy from vdiImage to primary
-- copy from primary to zfsImage

phase 2
-- copy from primary to vdiImage
-- copy from secondary to zfsImage




h2. ACTIONS (the primitives)

h3. VMachine.BackupNow
- questions
-- full backup or selected disks (windows) or volumes (linux)
-- if no full backup ask which volumes (when windows vol 1 = C, vol2 = D, vol3=E)
-- ask if want to see progress by means of joblog
- what happens
-- execute VMachine.SnapshotNow()
-- execute VMachine.CopyVolumeToDSS() for each relevant volume

h3. QDISK.BackupNow
-

h3. Restore A Backup
- on which object
-- existing vmachine
- params: what
-- latest backup
-- previous backup
--- ask which backup (based on time or name)
- warn
-- existing machine will be erased on primary storage and overwritten with data from backup.

h3. Snapshot Now

h3. Roll Back A Snapshot




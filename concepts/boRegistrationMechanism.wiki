
def:zenith_operator or def:bo_operator will use a def:bo_wizard on def:bo_portal to register the def:bo_env.

h2. registration process 

h3. step 1

* operator starts wizard on def:bo_portal
* ask dns name of cloudcenter
** store the cloudcenter dns name in local config (config mgmt, needed for other processes like watchdog)
* ask user_id with passwd : to identify the operator (def:zenith_operator or def:bo_operator)
* def:bo_env_guid is asked for
* wizard contacts comp:cloudcenter_applicationserver_registration to see if def:bo_env exists and if operator has access to it
** if not tell to contact support
* ask optional: location info
* ask optional: support info  (can be used to put remarks in how bo_env needs to be supported)
* comp:cloudcenter_applicationserver_registration stores relevant info in cloudcenter_db

h3. step 2 (give users right to bo_env)

* give other users access right to def:bo_env
* ask def:user_id to identify existing enduser (with passwd) or ask for new enduser 
** wizard contacts comp:cloudcenter_applicationserver_registration to see if user exists and can be authenticated
* if new user
** contact comp:cloudcenter_applicationserver_registration to register the new enduser 
** ask user_id & passwd & confirm & optional description & optional emailaddr
* ask right user will have on this def:bo_env  : view or operate are the 2 levels
* contact comp:cloudcenter_applicationserver_registration to set rights

if a new user the user will become child of the user_id who followed this process

h2. registration information

* def:bo_env_guid
* @todo 1 peter: complete
